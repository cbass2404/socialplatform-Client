[{"/home/cbass/coding/bottega/class/capstone/final/client/src/components/App.js":"1","/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/store.js":"2","/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/reducers/userReducers.js":"3","/home/cbass/coding/bottega/class/capstone/final/client/src/index.js":"4","/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/home.js":"5","/home/cbass/coding/bottega/class/capstone/final/client/src/components/util/theme.js":"6","/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/reducers/uiReducers.js":"7","/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/reducers/dataReducers.js":"8","/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/types.js":"9","/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/actions/dataActions.js":"10","/home/cbass/coding/bottega/class/capstone/final/client/src/components/util/tipButton.js":"11","/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/login.js":"12","/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/actions/userActions.js":"13","/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/signup.js":"14","/home/cbass/coding/bottega/class/capstone/final/client/src/components/profile/editDetails.js":"15","/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/user.js":"16","/home/cbass/coding/bottega/class/capstone/final/client/src/components/posts/post.js":"17","/home/cbass/coding/bottega/class/capstone/final/client/src/components/profile/profile.js":"18","/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/newPost.js":"19"},{"size":1888,"mtime":1606943792949,"results":"20","hashOfConfig":"21"},{"size":631,"mtime":1606885462243,"results":"22","hashOfConfig":"21"},{"size":1404,"mtime":1606886578280,"results":"23","hashOfConfig":"21"},{"size":157,"mtime":1606775006063,"results":"24","hashOfConfig":"21"},{"size":973,"mtime":1606945189089,"results":"25","hashOfConfig":"21"},{"size":1740,"mtime":1606940518914,"results":"26","hashOfConfig":"21"},{"size":691,"mtime":1606886048443,"results":"27","hashOfConfig":"21"},{"size":2466,"mtime":1606842442196,"results":"28","hashOfConfig":"21"},{"size":888,"mtime":1606822560488,"results":"29","hashOfConfig":"21"},{"size":1686,"mtime":1606946087618,"results":"30","hashOfConfig":"21"},{"size":388,"mtime":1606848401046,"results":"31","hashOfConfig":"21"},{"size":3056,"mtime":1606926154410,"results":"32","hashOfConfig":"21"},{"size":2505,"mtime":1606939118513,"results":"33","hashOfConfig":"21"},{"size":3735,"mtime":1606925949561,"results":"34","hashOfConfig":"21"},{"size":3794,"mtime":1606930043327,"results":"35","hashOfConfig":"21"},{"size":1813,"mtime":1606945131346,"results":"36","hashOfConfig":"21"},{"size":2158,"mtime":1606931776081,"results":"37","hashOfConfig":"21"},{"size":4562,"mtime":1606940655086,"results":"38","hashOfConfig":"21"},{"size":2775,"mtime":1606945717921,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"grjt1h",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/cbass/coding/bottega/class/capstone/final/client/src/components/App.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/store.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/reducers/userReducers.js",[],["84","85"],"/home/cbass/coding/bottega/class/capstone/final/client/src/index.js",[],["86","87"],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/home.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/util/theme.js",[],["88","89"],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/reducers/uiReducers.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/reducers/dataReducers.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/types.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/actions/dataActions.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/util/tipButton.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/login.js",["90"],"import { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport theme from \"../util/theme\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\";\n\nimport appIcon from \"../../images/favicon.ico\";\n\nconst styles = {\n  ...theme,\n};\n\nconst Login = (props) => {\n  const {\n    classes,\n    UI,\n    UI: { loading },\n    history,\n    loginUser,\n  } = props;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const initialProps = useRef(true);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const payload = {\n      email,\n      password,\n    };\n    loginUser(payload, history);\n  };\n\n  useEffect(() => {\n    if (initialProps.current) {\n      initialProps.current = false;\n      return;\n    }\n    setErrors(UI.errors);\n  }, [UI.errors]);\n\n  return (\n    <Grid container className={classes.form}>\n      <Grid item sm />\n      <Grid item sm>\n        <img src={appIcon} alt=\"App Icon\" className={classes.image} />\n        <Typography variant=\"h2\" className={classes.pageTitle}>\n          Login\n        </Typography>\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            className={classes.textField}\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            fullWidth\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.textField}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            fullWidth\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            disabled={loading}\n          >\n            Login\n            {loading && (\n              <CircularProgress size={30} className={classes.progress} />\n            )}\n          </Button>\n          <br />\n          <small>\n            Don't have an account? Sign up <Link to=\"/signup\">here</Link>\n          </small>\n        </form>\n      </Grid>\n      <Grid item sm />\n    </Grid>\n  );\n};\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { loginUser })(\n  withStyles(styles)(Login)\n);\n","/home/cbass/coding/bottega/class/capstone/final/client/src/components/redux/actions/userActions.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/signup.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/profile/editDetails.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/user.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/posts/post.js",["91","92","93","94"],"import { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport theme from \"../util/theme\";\n\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nimport TipButton from \"../util/tipButton\";\n\nconst styles = {\n  ...theme,\n  card: {\n    position: \"relative\",\n    display: \"flex\",\n    marginBottom: 20,\n  },\n  image: {\n    minWidth: 200,\n  },\n  content: {\n    padding: 25,\n    objectFit: \"cover\",\n  },\n};\n\nconst Post = (props) => {\n  const {\n    classes,\n    user: { authenticated, credentials },\n    post: {\n      body,\n      commentCount,\n      createdAt,\n      handle,\n      imageUrl,\n      likeCount,\n      postId,\n    },\n  } = props;\n\n  dayjs.extend(relativeTime);\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        image={imageUrl}\n        title=\"Profile image\"\n        className={classes.image}\n      />\n      <CardContent className={classes.content}>\n        <Typography\n          variant=\"h5\"\n          component={Link}\n          to={`/users/${handle}`}\n          color=\"primary\"\n        >\n          {handle}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {dayjs(createdAt).fromNow()}\n        </Typography>\n        <Typography variant=\"body1\">{body}</Typography>\n        <span>{likeCount} Likes</span>\n        <TipButton tip=\"comments\">\n          <ChatIcon color=\"primary\" />\n        </TipButton>\n        <span>{commentCount} comments</span>\n      </CardContent>\n    </Card>\n  );\n};\n\nPost.propTypes = {\n  user: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Post));\n",["95","96"],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/profile/profile.js",[],"/home/cbass/coding/bottega/class/capstone/final/client/src/components/pages/newPost.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"99","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":33,"column":10,"nodeType":"107","messageId":"108","endLine":33,"endColumn":16},{"ruleId":"105","severity":1,"message":"109","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":12},{"ruleId":"105","severity":1,"message":"110","line":39,"column":13,"nodeType":"107","messageId":"108","endLine":39,"endColumn":26},{"ruleId":"105","severity":1,"message":"111","line":39,"column":28,"nodeType":"107","messageId":"108","endLine":39,"endColumn":39},{"ruleId":"105","severity":1,"message":"112","line":47,"column":7,"nodeType":"107","messageId":"108","endLine":47,"endColumn":13},{"ruleId":"97","replacedBy":"113"},{"ruleId":"99","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],["115"],["116"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'authenticated' is assigned a value but never used.","'credentials' is assigned a value but never used.","'postId' is assigned a value but never used.",["115"],["116"],"no-global-assign","no-unsafe-negation"]